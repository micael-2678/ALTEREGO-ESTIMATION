#!/bin/bash

echo "üîç V√©rification de la configuration MongoDB"
echo "=========================================="
echo ""

# V√©rifier les variables d'environnement
echo "üìã Variables d'environnement:"
if [ -f .env ]; then
  echo "‚úÖ Fichier .env trouv√©"
  echo ""
  echo "MONGO_URL:"
  grep MONGO_URL .env | sed 's/:.*/:[PASSWORD_HIDDEN]@.../'
  echo ""
  echo "DB_NAME:"
  grep DB_NAME .env
else
  echo "‚ùå Fichier .env non trouv√©"
fi

echo ""
echo "=========================================="
echo "üß™ Test de connexion MongoDB via Node.js"
echo "=========================================="
echo ""

# Charger les variables d'environnement
source .env 2>/dev/null || export $(cat .env | xargs)

# Test de connexion
node -e "
const { MongoClient } = require('mongodb');

(async () => {
  try {
    console.log('üîó Tentative de connexion...');
    const client = new MongoClient(process.env.MONGO_URL);
    await client.connect();
    console.log('‚úÖ Connexion r√©ussie !');
    
    const db = client.db(process.env.DB_NAME);
    const collection = db.collection('dvf_sales');
    
    console.log('');
    console.log('üìä Statistiques:');
    const count = await collection.countDocuments();
    console.log('   Documents DVF:', count.toLocaleString('fr-FR'));
    
    const sample = await collection.findOne({ latitude: { \$exists: true } });
    if (sample) {
      console.log('');
      console.log('üìç Exemple de transaction:');
      console.log('   Commune:', sample.commune);
      console.log('   Type:', sample.type_local);
      console.log('   Surface:', sample.surface_reelle_bati, 'm¬≤');
      console.log('   Prix:', sample.valeur_fonciere?.toLocaleString('fr-FR'), '‚Ç¨');
    }
    
    console.log('');
    console.log('üéâ SUCC√àS - MongoDB est accessible !');
    await client.close();
    process.exit(0);
    
  } catch (error) {
    console.error('');
    console.error('‚ùå ERREUR:', error.message);
    console.error('');
    console.error('üí° Solutions possibles:');
    console.error('   1. V√©rifiez que MONGO_URL contient les credentials');
    console.error('   2. V√©rifiez que le hostname MongoDB est correct');
    console.error('   3. V√©rifiez que les services sont dans le m√™me r√©seau Docker');
    process.exit(1);
  }
})();
"

echo ""
echo "=========================================="
echo "‚úÖ Test termin√©"
echo "=========================================="
